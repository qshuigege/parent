server.port=8081
spring.application.name=demo
spring.jackson.date-format=yyyy/MM/dd HH:mm:ss
spring.jackson.time-zone=GMT+8

############################################################
#
# \u914D\u7F6ESqlserver\u6570\u636E\u6E90\u76F8\u5173
#
############################################################
sqlserver.c3p0.jdbcUrl=jdbc:sqlserver://10.1.1.25:1433;DatabaseName=fusenTarget0401
sqlserver.c3p0.user=sa
sqlserver.c3p0.password=Jjpmg4r8d
sqlserver.c3p0.driverClass=com.microsoft.sqlserver.jdbc.SQLServerDriver
sqlserver.c3p0.minPoolSize=5
sqlserver.c3p0.maxPoolSize=10
sqlserver.c3p0.maxIdleTime=1800000
sqlserver.c3p0.acquireIncrement=3
sqlserver.c3p0.maxStatements=1000
sqlserver.c3p0.initialPoolSize=5
sqlserver.c3p0.idleConnectionTestPeriod=60
sqlserver.c3p0.acquireRetryAttempts=3
sqlserver.c3p0.acquireRetryDelay=1000
sqlserver.c3p0.breakAfterAcquireFailure=false
sqlserver.c3p0.testConnectionOnCheckout=false
############################################################


############################################################
#
# \u914D\u7F6EMysql\u6570\u636E\u6E90\u76F8\u5173
#
############################################################
mysql.c3p0.jdbcUrl=jdbc:mysql://10.1.1.25:1235/db_b2b?failOverReadOnly=false&amp;secondsBeforeRetryMaster=0&amp;queriesBeforeRetryMaster=0&amp;useOldAliasMetadataBehavior=true
mysql.c3p0.user=root
mysql.c3p0.password=root
mysql.c3p0.driverClass=com.mysql.jdbc.Driver
mysql.c3p0.minPoolSize=5
mysql.c3p0.maxPoolSize=200
mysql.c3p0.maxIdleTime=0
mysql.c3p0.acquireIncrement=3
mysql.c3p0.maxStatements=1000
mysql.c3p0.initialPoolSize=5
mysql.c3p0.idleConnectionTestPeriod=60
mysql.c3p0.acquireRetryAttempts=3
mysql.c3p0.acquireRetryDelay=1000
mysql.c3p0.breakAfterAcquireFailure=false
mysql.c3p0.testConnectionOnCheckout=false
############################################################

############################################################
#
# kafka \u914D\u7F6E
#
############################################################

#=============== provider  =======================
spring.kafka.producer.bootstrap-servers=10.1.1.25:9092
spring.kafka.producer.retries=3
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
spring.kafka.consumer.bootstrap-servers=10.1.1.25:9092
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=wechat-service

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100ms

# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#################################################################################################

############################################################
#
# REDIS \u914D\u7F6E
########--192.168.1.191
############################################################
# REDIS (RedisProperties)
# Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF09
spring.redis.database=0
# Redis\u670D\u52A1\u5668\u5730\u5740a
spring.redis.host=10.1.1.25
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u7AEF\u53E3
spring.redis.port=6379
# Redis\u670D\u52A1\u5668\u8FDE\u63A5\u5BC6\u7801\uFF08\u9ED8\u8BA4\u4E3A\u7A7A\uFF09
spring.redis.password=foobared
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.jedis.pool.max-wait=3000ms
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.jedis.pool.min-idle=3
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=1000ms
############################################################


############################################################
#
# MongoDB \u914D\u7F6E
########
############################################################
#spring.data.mongodb.uri=mongodb://10.1.1.52:37017,10.1.1.42:37017,10.1.1.42:37018/db_vehicle?replicaSet=filedata&connectTimeoutMS=3000&socketTimeoutMS=1000&maxPoolSize=200&minPoolSize=18&maxIdleTimeMS=6000000000&waitQueueMultiple=4&waitQueueTimeoutMS=1000
mongodb.multidb.uri1=mongodb://10.1.1.52:37017,10.1.1.42:37017,10.1.1.42:37018/db_vehicle?replicaSet=filedata&connectTimeoutMS=3000&socketTimeoutMS=1000&maxPoolSize=200&minPoolSize=18&maxIdleTimeMS=600000000&waitQueueMultiple=4&waitQueueTimeoutMS=1000
mongodb.multidb.uri2=mongodb://10.1.1.55:37017,10.1.1.56:37017,10.1.1.57:37017/db_logistics?replicaSet=filedata&connectTimeoutMS=3000&socketTimeoutMS=1000&maxPoolSize=200&minPoolSize=18&maxIdleTimeMS=600000000&waitQueueMultiple=4&waitQueueTimeoutMS=1000
#spring.servlet.multipart.max-file-size=300MB
#spring.servlet.multipart.max-request-size=300MB

#mongodb.db1.database=db_vehicle
#mongodb.db1.host=10.1.1.52:37017,10.1.1.42:37017,10.1.1.42:37018
#mongodb.db1.username=
#mongodb.db1.password=
#
#mongodb.db2.database=db_logistics
#mongodb.db2.host=10.1.1.55:37017,10.1.1.56:37017,10.1.1.57:37017
#mongodb.db2.username=
#mongodb.db2.password=

wechat.appid=wx2502c42b3e3cd660
wechat.appsecret=8ce511053b5b11060d7ceef9d54a0e5b
wechat.originalid=gh_7b7815cd56b5
wechat.appid_openplatform=wx92e45ce9f10eee08
wechat.appsecret_openplatform=a46be8fe9a5ff98018eada332dc1a51c